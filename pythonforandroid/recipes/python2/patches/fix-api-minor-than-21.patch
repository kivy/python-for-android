diff -Naurp Python-2.7.15.orig/configure.ac Python-2.7.15/configure.ac
--- Python-2.7.15.orig/configure.ac	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/configure.ac	2018-07-05 17:44:50.500985727 +0200
@@ -1790,7 +1790,7 @@ fi
 # structures (such as rlimit64) without declaring them. As a
 # work-around, disable LFS on such configurations
 
-use_lfs=yes
+use_lfs=no
 AC_MSG_CHECKING(Solaris LFS bug)
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #define _LARGEFILE_SOURCE 1
diff -Naurp Python-2.7.15.orig/Modules/_localemodule.c Python-2.7.15/Modules/_localemodule.c
--- Python-2.7.15.orig/Modules/_localemodule.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Modules/_localemodule.c	2018-07-05 16:39:08.241023323 +0200
@@ -170,6 +170,12 @@ PyLocale_setlocale(PyObject* self, PyObj
         PyErr_SetString(Error, "invalid locale category");
         return NULL;
     }
+#else
+    #ifdef __ANDROID__
+        #if defined(__ANDROID_API__) && __ANDROID_API__ < 20
+            return PyUnicode_FromFormat("%s", "C");
+        #endif
+    #endif
 #endif
 
     if (locale) {
@@ -215,7 +221,15 @@ PyLocale_localeconv(PyObject* self)
         return NULL;
 
     /* if LC_NUMERIC is different in the C library, use saved value */
-    l = localeconv();
+    //PMPP API<21
+    #if __ANDROID_API__ < 21
+        /* Don't even try on Android's broken locale.h. */
+        goto failed;
+    #else
+         /* if LC_NUMERIC is different in the C library, use saved value */
+         l = localeconv(); //PATCHED
+    #endif
+    //PMPP API<21
 
     /* hopefully, the localeconv result survives the C library calls
        involved herein */
diff -Naurp Python-2.7.15.orig/Modules/mmapmodule.c Python-2.7.15/Modules/mmapmodule.c
--- Python-2.7.15.orig/Modules/mmapmodule.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Modules/mmapmodule.c	2018-07-05 16:18:40.953035027 +0200
@@ -78,6 +78,12 @@ my_getpagesize(void)
 #  define MAP_ANONYMOUS MAP_ANON
 #endif
 
+//PMPP API<21
+#if __ANDROID_API__ < 21
+    extern void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);
+#endif
+//PMPP API<21
+
 static PyObject *mmap_module_error;
 
 typedef enum
diff -Naurp Python-2.7.15.orig/Modules/posixmodule.c Python-2.7.15/Modules/posixmodule.c
--- Python-2.7.15.orig/Modules/posixmodule.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Modules/posixmodule.c	2018-07-05 16:20:48.933033807 +0200
@@ -9477,6 +9477,12 @@ all_ins(PyObject *d)
 #define MODNAME "posix"
 #endif
 
+//PMPP API<21
+#if __ANDROID_API__ < 21
+    extern ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count);
+#endif
+//PMPP API<21
+
 PyMODINIT_FUNC
 INITFUNC(void)
 {
diff -Naurp Python-2.7.15.orig/Modules/signalmodule.c Python-2.7.15/Modules/signalmodule.c
--- Python-2.7.15.orig/Modules/signalmodule.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Modules/signalmodule.c	2018-07-05 16:40:46.601022385 +0200
@@ -32,6 +32,13 @@
 #include <process.h>
 #endif
 
+//PMPP API<21
+#if __ANDROID_API__ < 21
+    #define SIGRTMIN 32
+    #define SIGRTMAX _NSIG
+#endif
+//PMPP API<21
+
 #ifndef NSIG
 # if defined(_NSIG)
 #  define NSIG _NSIG            /* For BSD/SysV */
diff -Naurp Python-2.7.15.orig/Modules/termios.c Python-2.7.15/Modules/termios.c
--- Python-2.7.15.orig/Modules/termios.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Modules/termios.c	2018-07-05 16:43:16.457020956 +0200
@@ -357,7 +357,11 @@ static struct constant {
 #endif
 
     /* tcsetattr() constants */
+#if defined(__ANDROID_API__) && __ANDROID_API__ > 0
+    {"TCSANOW", TCSETS},     // https://github.com/android-ndk/ndk/issues/441
+#else
     {"TCSANOW", TCSANOW},
+#endif
     {"TCSADRAIN", TCSADRAIN},
     {"TCSAFLUSH", TCSAFLUSH},
 #ifdef TCSASOFT
diff -Naurp Python-2.7.15.orig/Objects/obmalloc.c Python-2.7.15/Objects/obmalloc.c
--- Python-2.7.15.orig/Objects/obmalloc.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Objects/obmalloc.c	2018-07-05 16:52:27.577015700 +0200
@@ -1,5 +1,11 @@
 #include "Python.h"
 
+//PMPP API<21
+#if __ANDROID_API__ < 21
+    extern void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);
+#endif
+//PMPP API<21
+
 #if defined(__has_feature)  /* Clang */
  #if __has_feature(address_sanitizer)  /* is ASAN enabled? */
   #define ATTRIBUTE_NO_ADDRESS_SAFETY_ANALYSIS \
diff -Naurp Python-2.7.15.orig/Python/pystrtod.c Python-2.7.15/Python/pystrtod.c
--- Python-2.7.15.orig/Python/pystrtod.c	2018-04-30 00:47:33.000000000 +0200
+++ Python-2.7.15/Python/pystrtod.c	2018-07-05 17:02:52.089009744 +0200
@@ -137,9 +137,14 @@ _PyOS_ascii_strtod(const char *nptr, cha
     assert(nptr != NULL);
 
     fail_pos = NULL;
-
-    locale_data = localeconv();
-    decimal_point = locale_data->decimal_point;
+    //PMPP API<21
+    #if __ANDROID_API__ < 21
+        decimal_point = ".";
+    #else
+        locale_data = localeconv(); //PATCHED
+        decimal_point = locale_data->decimal_point;
+    #endif
+    //PMPP API<21
     decimal_point_len = strlen(decimal_point);
 
     assert(decimal_point_len != 0);
